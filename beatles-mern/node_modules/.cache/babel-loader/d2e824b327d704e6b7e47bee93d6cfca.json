{"ast":null,"code":"var _jsxFileName = \"/Users/Tenley/SEI/Projects/beatles-mern-project/beatles-mern/src/JohnLennon/JohnLennon.js\";\nimport React, { Component } from \"react\";\nimport \"./JohnLennon.css\";\nimport axios from \"axios\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SongInfo from \"../SongInfo\";\nimport John from \"../img/JohnLennon.jpeg\";\nimport Alphabet from \"../Alphabet/Alphabet\";\n\nclass JohnLennon extends Component {\n  constructor(props) {\n    super(props);\n\n    this.songClick = e => {\n      this.setState({\n        song: e.target.getAttribute(\"value\"),\n        lyrics: e.target.getAttribute(\"datavalue\")\n      });\n    };\n\n    this.newarray = filter = () => {\n      var results = [];\n      var len = unfilteredsongs.length;\n\n      for (var i = 0; i < len; i++) {\n        if (unfilteredsongs[i].indexOf(this.state.filterLetter) == 0) results.push(unfilteredsongs[i]);\n      }\n\n      return results;\n    };\n\n    this.filterSongs = letter => {\n      console.log(letter, \"this data has been moved from alphabet to JohnLennon.js\");\n      this.setState({\n        filterLetter: letter\n      });\n    };\n\n    this.state = {\n      gets: [],\n      song: \"\",\n      lyrics: \"\",\n      artist: \"\",\n      filterLetter: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://beatles-api.herokuapp.com/name/John%20Lennon`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"dakom1-crud-api.herokuapp.com/lists\"\n      }\n    }).then(res => {\n      console.log(res);\n      this.setState({\n        gets: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      gets\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alphabetBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alphabet, {\n      letterSelector: this.filterSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })), this.state.artist, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: John,\n      alt: \"\",\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), gets.map(gets => /*#__PURE__*/React.createElement(\"div\", {\n      key: gets._id,\n      value: gets.Song,\n      datavalue: gets.Lyrics,\n      onClick: this.songClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, gets.Song))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songLyrics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SongInfo, {\n      value: this.state.song,\n      datavalue: this.state.lyrics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Song!\")));\n  }\n\n}\n\nexport default JohnLennon;","map":{"version":3,"sources":["/Users/Tenley/SEI/Projects/beatles-mern-project/beatles-mern/src/JohnLennon/JohnLennon.js"],"names":["React","Component","axios","Modal","makeStyles","SongInfo","John","Alphabet","JohnLennon","constructor","props","songClick","e","setState","song","target","getAttribute","lyrics","newarray","filter","results","len","unfilteredsongs","length","i","indexOf","state","filterLetter","push","filterSongs","letter","console","log","gets","artist","componentDidMount","get","headers","then","res","data","catch","error","render","map","_id","Song","Lyrics"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./JohnLennon.css\";\nimport axios from \"axios\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SongInfo from \"../SongInfo\";\nimport John from \"../img/JohnLennon.jpeg\";\nimport Alphabet from \"../Alphabet/Alphabet\";\n\nclass JohnLennon extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gets: [],\n      song: \"\",\n      lyrics: \"\",\n      artist: \"\",\n      filterLetter: null,\n    };\n  }\n\n  songClick = (e) => {\n    this.setState({\n      song: e.target.getAttribute(\"value\"),\n      lyrics: e.target.getAttribute(\"datavalue\"),\n    });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://beatles-api.herokuapp.com/name/John%20Lennon`,\n        {\n          headers: {\n            \"Access-Control-Allow-Origin\":\n              \"dakom1-crud-api.herokuapp.com/lists\",\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({ gets: res.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  newarray = (filter = () => {\n    var results = [];\n    var len = unfilteredsongs.length;\n    for (var i = 0; i < len; i++) {\n      if (unfilteredsongs[i].indexOf(this.state.filterLetter) == 0)\n        results.push(unfilteredsongs[i]);\n    }\n    return results;\n  });\n\n  filterSongs = (letter) => {\n    console.log(\n      letter,\n      \"this data has been moved from alphabet to JohnLennon.js\"\n    );\n    this.setState({ filterLetter: letter });\n  };\n\n  render() {\n    const { gets } = this.state;\n\n    return (\n      <div>\n        <div>\n          <div className=\"alphabetBox\">\n            <Alphabet letterSelector={this.filterSongs}></Alphabet>\n          </div>\n\n          {this.state.artist}\n          <br></br>\n          <br></br>\n\n          <img src={John} alt=\"\" className=\"profile\"></img>\n\n          {gets.map((gets) => (\n            <div\n              key={gets._id}\n              value={gets.Song}\n              datavalue={gets.Lyrics}\n              onClick={this.songClick}\n            >\n              {gets.Song}\n            </div>\n          ))}\n        </div>\n        <div className=\"songLyrics\">\n          <SongInfo value={this.state.song} datavalue={this.state.lyrics}>\n            Song!\n          </SongInfo>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JohnLennon;\n"]},"metadata":{},"sourceType":"module"}