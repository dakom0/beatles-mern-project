{"ast":null,"code":"var _jsxFileName = \"/Users/Tenley/SEI/Projects/beatles-mern-project/beatles-mern/src/RingoStarr/RingoStarr.js\";\nimport \"./RingoStarr.css\";\nimport Ringo from \"../img/Ringo-Starr-Photo.jpg\";\nimport axios from \"axios\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SongInfo from \"../SongInfo\";\nimport Alphabet from \"../Alphabet/Alphabet\";\nimport React, { Component } from \"react\";\n\nclass RingoStarr extends Component {\n  constructor(props) {\n    super(props);\n\n    this.songClick = e => {\n      this.setState({\n        song: e.target.getAttribute(\"value\"),\n        lyrics: e.target.getAttribute(\"datavalue\")\n      });\n    };\n\n    this.filterSongs = letter => {\n      console.log(letter, \"from the artist page\");\n      let filteredSongs = this.state.gets.filter(song => {\n        return song.Song.toLowerCase().charAt(0) == letter.toLowerCase();\n      });\n      this.setState({\n        filterLetter: letter,\n        filteredsongs: filteredSongs\n      });\n    };\n\n    this.state = {\n      gets: [],\n      song: \"\",\n      lyrics: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://beatles-api.herokuapp.com/name/Ringo%20Starr`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"dakom1-crud-api.herokuapp.com/lists\"\n      }\n    }).then(res => {\n      console.log(res);\n      this.setState({\n        gets: res.data,\n        filteredsongs: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const gets = this.state.filteredsongs;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alphabetBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alphabet, {\n      letterSelector: this.filterSongs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), this.state.artist, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: Ringo,\n      alt: \"\",\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), gets.length ? gets.map(gets => /*#__PURE__*/React.createElement(\"div\", {\n      key: gets._id,\n      value: gets.Song,\n      datavalue: gets.Lyrics,\n      onClick: this.songClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, gets.Song)) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songLyrics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SongInfo, {\n      value: this.state.song,\n      datavalue: this.state.lyrics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Song!\")));\n  }\n\n}\n\nexport default RingoStarr;","map":{"version":3,"sources":["/Users/Tenley/SEI/Projects/beatles-mern-project/beatles-mern/src/RingoStarr/RingoStarr.js"],"names":["Ringo","axios","Modal","makeStyles","SongInfo","Alphabet","React","Component","RingoStarr","constructor","props","songClick","e","setState","song","target","getAttribute","lyrics","filterSongs","letter","console","log","filteredSongs","state","gets","filter","Song","toLowerCase","charAt","filterLetter","filteredsongs","componentDidMount","get","headers","then","res","data","catch","error","render","artist","length","map","_id","Lyrics"],"mappings":"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","sourcesContent":["import \"./RingoStarr.css\";\nimport Ringo from \"../img/Ringo-Starr-Photo.jpg\";\nimport axios from \"axios\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SongInfo from \"../SongInfo\";\nimport Alphabet from \"../Alphabet/Alphabet\";\nimport React, { Component } from \"react\";\n\nclass RingoStarr extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gets: [],\n      song: \"\",\n      lyrics: \"\",\n    };\n  }\n\n  songClick = (e) => {\n    this.setState({\n      song: e.target.getAttribute(\"value\"),\n      lyrics: e.target.getAttribute(\"datavalue\"),\n    });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://beatles-api.herokuapp.com/name/Ringo%20Starr`,\n        {\n          headers: {\n            \"Access-Control-Allow-Origin\":\n              \"dakom1-crud-api.herokuapp.com/lists\",\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({ gets: res.data, filteredsongs: res.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  filterSongs = (letter) => {\n    console.log(letter, \"from the artist page\");\n    let filteredSongs = this.state.gets.filter((song) => {\n      return song.Song.toLowerCase().charAt(0) == letter.toLowerCase();\n    });\n    this.setState({ filterLetter: letter, filteredsongs: filteredSongs });\n  };\n\n  render() {\n    const gets = this.state.filteredsongs;\n\n    return (\n      <div>\n        <div>\n          <div className=\"alphabetBox\">\n            <Alphabet letterSelector={this.filterSongs} />\n          </div>\n          {this.state.artist}\n          <br></br>\n          <br></br>\n          <img src={Ringo} alt=\"\" className=\"profile\"></img>\n          {gets.length\n            ? gets.map((gets) => (\n                <div\n                  key={gets._id}\n                  value={gets.Song}\n                  datavalue={gets.Lyrics}\n                  onClick={this.songClick}\n                >\n                  {gets.Song}\n                </div>\n              ))\n            : null}\n        </div>\n        <div className=\"songLyrics\">\n          <SongInfo value={this.state.song} datavalue={this.state.lyrics}>\n            Song!\n          </SongInfo>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RingoStarr;\n"]},"metadata":{},"sourceType":"module"}